const { OpenAI } = require("openai");

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

module.exports = async function generateTagsFromText(text) {
  try {
    const response = await openai.chat.completions.create({
      model: "gpt-4o-mini",
      messages: [
        {
          role: "system",
          content:
            "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –ø–æ —Ä–∏—Å–æ–≤–∞–Ω–∏—é. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –∑–∞–ø—Ä–æ—Å. –í—ã–¥–µ–ª–∏ 3‚Äì5 –ø—Ä–æ—Å—Ç—ã—Ö –∏ –ø–æ–Ω—è—Ç–Ω—ã—Ö —Ç–µ–≥–æ–≤ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –≥–∞–π–¥–∞–º. –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π –æ–±—â–∏–µ –∏–ª–∏ —Å–æ—Å—Ç–∞–≤–Ω—ã–µ —Ñ—Ä–∞–∑—ã –≤—Ä–æ–¥–µ 'drawing basics', 'art tutorial', 'light and shadow'. –õ—É—á—à–µ —É–∫–∞–∂–∏ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø–æ–Ω—è—Ç–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä: hand, shadow, anatomy. –û—Ç–≤–µ—Ç—å —Ç–æ–ª—å–∫–æ —Å–ø–∏—Å–∫–æ–º —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é.",
        },
        { role: "user", content: text },
      ],
      max_tokens: 50,
    });
    // console.log("üìä –¢–æ–∫–µ–Ω—ã:", response.usage);

    const content = response.choices[0].message.content;

    const tags = content
      .split(",")
      .map((tag) => tag.replace(/^['"\s]+|['"\s]+$/g, "").toLowerCase())
      .filter(Boolean);
    console.log("üìä tags:", tags);
    return tags;
  } catch (error) {
    r;
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–≥–æ–≤ –∏–∑ —Ç–µ–∫—Å—Ç–∞:", error);
    return [];
  }
};
